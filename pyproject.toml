[project]
name = "cphs2017"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "h5netcdf>=1.6.3",
    "h5py>=3.14.0",
    "matplotlib>=3.10.3",
    "netcdf4>=1.7.2",
    "pandas>=2.3.1",
    "scipy>=1.16.1",
    "tables>=3.10.2",
    "xarray>=2025.7.1",
]

[dependency-groups]
dev = [
    "basedpyright>=1.31.0",
    "ipykernel>=6.30.0",
    "ruff>=0.12.5",
]

[tool.ruff]
# Assume Python 3.10
target-version = "py310"

# Same as Black.
line-length = 88
indent-width = 4

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

# Like Black, indent with spaces, rather than tabs.
format.indent-style = "space"
# Like Black, use double quotes for strings.
format.quote-style = "double"
# Like Black, automatically detect the appropriate line ending.
format.line-ending = "auto"
# Like Black, respect magic trailing commas.
format.skip-magic-trailing-comma = false
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
format.docstring-code-line-length = "dynamic"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
format.docstring-code-format = true
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
lint.select = [ "E", "F", "I001" ]
lint.ignore = [  ]
# Allow fix for all enabled rules (when `--fix`) is provided.
lint.fixable = [ "ALL" ]
lint.unfixable = [  ]
# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.docformatter]
recursive = false
wrap-summaries = 65
wrap-descriptions = 65
force-wrap = true
blank = true

[tool.pyproject-fmt]
column_width = 55
indent = 2
keep_full_version = false
max_supported_python = "3.14"

[tool.pyright]
venvPath = "."
venv = ".venv"

typeCheckingMode = "standard"
reportUnusedImport = "none"
reportUnusedFunction = "none"
reportUnusedVariable = "none"
reportUndefinedVariable = "none"
